// <auto-generated />
using System;
using System.Collections;
using CompServiceApplication;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CompServiceApplication.Migrations
{
    [DbContext(typeof(AppDatabaseContext))]
    [Migration("20230918163826_CompService")]
    partial class CompService
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CompServiceApplication.Models.Device", b =>
                {
                    b.Property<int>("DeviceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DeviceID"));

                    b.Property<string>("DeviceDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DeviceID");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("CompServiceApplication.Models.InWork", b =>
                {
                    b.Property<int>("WorkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("WorkID"));

                    b.Property<int>("TaskOrderID")
                        .HasColumnType("integer");

                    b.Property<string>("WorkStageDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("WorkID");

                    b.ToTable("InWorks");
                });

            modelBuilder.Entity("CompServiceApplication.Models.PartToDevice", b =>
                {
                    b.Property<int>("PartToDeviceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PartToDeviceID"));

                    b.Property<int>("DeviceID")
                        .HasColumnType("integer");

                    b.Property<int>("PartID")
                        .HasColumnType("integer");

                    b.HasKey("PartToDeviceID");

                    b.ToTable("PartToDevices");
                });

            modelBuilder.Entity("CompServiceApplication.Models.PartToOrder", b =>
                {
                    b.Property<int>("PartToOrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PartToOrderID"));

                    b.Property<int>("PartID")
                        .HasColumnType("integer");

                    b.Property<int>("PartsCount")
                        .HasColumnType("integer");

                    b.Property<int>("PurchaseOrderID")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("money");

                    b.HasKey("PartToOrderID");

                    b.ToTable("PartToOrders");
                });

            modelBuilder.Entity("CompServiceApplication.Models.PurchaseOrder", b =>
                {
                    b.Property<int>("PurchaseOrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PurchaseOrderID"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StatusChangeDate")
                        .HasColumnType("date");

                    b.Property<int>("UserID")
                        .HasColumnType("integer");

                    b.HasKey("PurchaseOrderID");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("CompServiceApplication.Models.RepairInWork", b =>
                {
                    b.Property<int>("RepairInWorkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RepairInWorkID"));

                    b.Property<int>("RepairID")
                        .HasColumnType("integer");

                    b.Property<int>("WorkID")
                        .HasColumnType("integer");

                    b.HasKey("RepairInWorkID");

                    b.ToTable("RepairInWorks");
                });

            modelBuilder.Entity("CompServiceApplication.Models.RepairType", b =>
                {
                    b.Property<int>("RepairTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RepairTypeID"));

                    b.Property<string>("RepairDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("RepairPrice")
                        .HasColumnType("money");

                    b.HasKey("RepairTypeID");

                    b.ToTable("RepairTypes");
                });

            modelBuilder.Entity("CompServiceApplication.Models.TaskOrder", b =>
                {
                    b.Property<int>("TaskOrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TaskOrderID"));

                    b.Property<int>("DeviceID")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("FinallyCost")
                        .HasColumnType("money");

                    b.Property<string>("ProblemDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("UserID")
                        .HasColumnType("integer");

                    b.HasKey("TaskOrderID");

                    b.ToTable("TaskOrders");
                });

            modelBuilder.Entity("CompServiceApplication.Models.UsedPart", b =>
                {
                    b.Property<int>("UsedPartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UsedPartID"));

                    b.Property<int>("PartID")
                        .HasColumnType("integer");

                    b.Property<int>("UsedPartCount")
                        .HasColumnType("integer");

                    b.Property<decimal>("UsedPartPrice")
                        .HasColumnType("money");

                    b.HasKey("UsedPartID");

                    b.ToTable("UsedParts");
                });

            modelBuilder.Entity("CompServiceApplication.Models.UsedPartsInWork", b =>
                {
                    b.Property<int>("UsedPartsInWorkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UsedPartsInWorkId"));

                    b.Property<int>("UsedPartID")
                        .HasColumnType("integer");

                    b.Property<int>("WorkID")
                        .HasColumnType("integer");

                    b.HasKey("UsedPartsInWorkId");

                    b.ToTable("UsedPartsInWorks");
                });

            modelBuilder.Entity("CompServiceApplication.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("Date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("character varying(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("character varying(50)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PassNumber")
                        .IsRequired()
                        .HasColumnType("character varying(6)");

                    b.Property<string>("PassSeries")
                        .IsRequired()
                        .HasColumnType("character varying(4)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("character varying(11)");

                    b.Property<string>("UserLogin")
                        .IsRequired()
                        .HasColumnType("character varying(50)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<int>("UserTypeId")
                        .HasColumnType("integer");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CompServiceApplication.Models.UserInWork", b =>
                {
                    b.Property<int>("UserInWorkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserInWorkID"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("UserID")
                        .HasColumnType("integer");

                    b.Property<int>("WorkID")
                        .HasColumnType("integer");

                    b.HasKey("UserInWorkID");

                    b.ToTable("UserInWorks");
                });

            modelBuilder.Entity("CompServiceApplication.Models.UserType", b =>
                {
                    b.Property<int>("UserTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserTypeID"));

                    b.Property<string>("UserTypeName")
                        .IsRequired()
                        .HasColumnType("character varying(50)");

                    b.HasKey("UserTypeID");

                    b.ToTable("UserTypes");
                });

            modelBuilder.Entity("CompServiceApplication.Models.Visualflow", b =>
                {
                    b.Property<int>("VisualFlowID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("VisualFlowID"));

                    b.Property<int>("TaskOrderID")
                        .HasColumnType("integer");

                    b.Property<BitArray>("VisualFlow")
                        .IsRequired()
                        .HasColumnType("bit varying");

                    b.HasKey("VisualFlowID");

                    b.ToTable("Visualflows");
                });

            modelBuilder.Entity("CompServiceApplication.Models.Warehouse", b =>
                {
                    b.Property<int>("PartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PartID"));

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PartName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("PartPrice")
                        .HasColumnType("money");

                    b.Property<int>("PartsCount")
                        .HasColumnType("integer");

                    b.HasKey("PartID");

                    b.ToTable("Warehouses");
                });
#pragma warning restore 612, 618
        }
    }
}
